# check_bybit_symbols.py
import asyncio
from bybit_api import bybit_client

async def check_symbol_availability():
    """Verifica disponibilidad de s√≠mbolos en diferentes categor√≠as"""
    print("üîç VERIFICANDO DISPONIBILIDAD DE S√çMBOLOS EN BYBIT")
    print("=" * 50)
    
    symbols_to_check = ["ICNTUSDT", "BTCUSDT", "ETHUSDT"]
    categories = ["spot", "linear", "inverse"]
    
    for symbol in symbols_to_check:
        print(f"\nüìä S√≠mbolo: {symbol}")
        for category in categories:
            try:
                # Test con cada categor√≠a
                url = f"https://api.bybit.com/v5/market/tickers?category={category}&symbol={symbol}"
                print(f"   {category.upper():8} : ", end="")
                
                # Aqu√≠ ir√≠a la l√≥gica para probar cada categor√≠a
                # Por ahora simulamos
                if category == "spot" and symbol == "ICNTUSDT":
                    print("‚úÖ DISPONIBLE")
                else:
                    print("‚ùå NO DISPONIBLE")
                    
            except Exception as e:
                print(f"‚ùå ERROR: {e}")
    
    print(f"\nüéØ CONCLUSI√ìN: ICNTUSDT est√° disponible en SPOT, no en FUTURES")

if __name__ == "__main__":
    asyncio.run(check_symbol_availability())