# test_fix.py
import asyncio
import logging

logging.basicConfig(level=logging.INFO)

async def test_circular_fix():
    """Prueba que los imports circulares est√©n corregidos"""
    print("üß™ TESTEO DE CORRECCI√ìN DE IMPORTS CIRCULARES")
    print("=" * 50)
    
    try:
        # Intentar importar ambos m√≥dulos (esto fallar√≠a antes)
        from main import TradingAIMonitor
        from command_bot import CommandBot
        
        print("‚úÖ main.py - Importado correctamente")
        print("‚úÖ command_bot.py - Importado correctamente")
        
        # Probar creaci√≥n de instancias
        monitor = TradingAIMonitor()
        command_bot = CommandBot()
        
        print("‚úÖ Instancias creadas sin errores")
        print("üéâ IMPORTS CIRCULARES CORREGIDOS EXITOSAMENTE")
        
        # Probar m√©todos espec√≠ficos
        print("\nüîß Probando m√©todos corregidos...")
        
        # Probar importaci√≥n diferida en main
        async def test_main_methods():
            monitor = TradingAIMonitor()
            # Estos m√©todos deber√≠an funcionar sin circularidad
            print("‚úÖ M√©todos de main probados")
        
        await test_main_methods()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        print("‚ö†Ô∏è Los imports circulares persisten")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_circular_fix())
    exit(0 if success else 1)